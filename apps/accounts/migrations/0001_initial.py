# Generated by Django 2.2.4 on 2019-10-12 19:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('street_1', models.CharField(blank=True, default='', max_length=250)),
                ('street_2', models.CharField(blank=True, default='', max_length=250)),
                ('city', models.CharField(blank=True, default='', max_length=250)),
                ('state', models.CharField(blank=True, default='', max_length=2)),
                ('zipcode', models.CharField(blank=True, default='', max_length=10)),
                ('country', models.CharField(blank=True, default='', max_length=2)),
                ('subject', models.CharField(blank=True, default='', max_length=250)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=250)),
                ('number_str_include', models.CharField(blank=True, default='', help_text='Choose up to 10 number to be included in your account number.', max_length=10, verbose_name='Pick Your Own ID')),
                ('slug', models.SlugField(blank=True, default='', editable=False, max_length=250)),
                ('subject', models.CharField(blank=True, db_index=True, default='', help_text='Subject ID', max_length=64)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='organization-logo/')),
                ('registration_code', models.CharField(blank=True, default='', max_length=100)),
                ('domain', models.CharField(blank=True, default='', help_text='A list of domains separated by white space. If populated, restrict email registration to these domains.', max_length=512, verbose_name='Email Domain(s)')),
                ('website', models.CharField(blank=True, default='', max_length=512)),
                ('phone_number', models.CharField(blank=True, default='', max_length=15)),
                ('agree_tos', models.CharField(blank=True, default='', help_text='Do you agree to the terms and conditions?', max_length=64)),
                ('agree_privacy_policy', models.CharField(blank=True, default='', help_text='Do you agree to the privacy policy?', max_length=64)),
                ('auto_ial_2_for_agents', models.BooleanField(blank=True, default=True)),
                ('auto_ial_2_for_agents_description', models.TextField(blank=True, default='Documents verified by i9 employment')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('addresses', models.ManyToManyField(blank=True, related_name='organization_addresses', to='accounts.Address')),
                ('default_groups_for_agents', models.ManyToManyField(blank=True, help_text='All new agents will be in these groups by default.', to='auth.Group')),
                ('members', models.ManyToManyField(blank=True, help_text='This field is a placeholder and is not supported in this version.', related_name='org_members', to=settings.AUTH_USER_MODEL)),
                ('point_of_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organization_point_of_contact', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(blank=True, help_text='Employees or contractors acting on behalf of the organization.', related_name='org_staff', to=settings.AUTH_USER_MODEL, verbose_name='Organization Agent')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True, default='', max_length=250)),
                ('value', models.CharField(blank=True, db_index=True, default='', max_length=250)),
                ('metadata', models.TextField(blank=True, default='', help_text='JSON Object')),
                ('type', models.CharField(blank=True, default='', max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='ValidPasswordResetKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_password_key', models.CharField(blank=True, max_length=50)),
                ('expires', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, db_index=True, default='', help_text='Subject for identity token', max_length=64)),
                ('middle_name', models.CharField(blank=True, default='', help_text='Middle Name', max_length=255)),
                ('picture', models.ImageField(null=True, upload_to='profile-picture/')),
                ('nickname', models.CharField(blank=True, default='', help_text='Nickname, alias, or other names used.', max_length=255)),
                ('email_verified', models.BooleanField(blank=True, default=False)),
                ('phone_verified', models.BooleanField(blank=True, default=False)),
                ('mobile_phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, default='', help_text='US numbers only.', max_length=128)),
                ('password_recovery_passphrase', models.TextField(blank=True, default='')),
                ('password_recovery_passphrase_hash', models.TextField(blank=True, default='')),
                ('public_key', models.TextField(blank=True, default='')),
                ('private_key', models.TextField(blank=True, default='')),
                ('mobile_phone_number_verified', models.BooleanField(blank=True, default=False)),
                ('number_str_include', models.CharField(blank=True, default='', help_text='Choose up to 10 number to be included in your account number.', max_length=10, verbose_name='Pick Your Own ID')),
                ('sex', models.CharField(blank=True, choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Gender Neutral'), ('', 'Left Blank')], default='', help_text='Specify sex, not gender identity.', max_length=6)),
                ('gender_identity', models.CharField(blank=True, choices=[('female', 'Female'), ('male', 'Male'), ('custom', 'Custom')], default='', help_text='Gender Identity is not necessarily the same as birth sex.', max_length=64)),
                ('gender_identity_custom_value', models.CharField(blank=True, default='', help_text='Enter a custom value for gender_identity.', max_length=64)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('agree_tos', models.CharField(blank=True, default='', help_text='Do you agree to the terms and conditions?', max_length=64)),
                ('agree_privacy_policy', models.CharField(blank=True, default='', help_text='Do you agree to the privacy policy?', max_length=64)),
                ('attest_training_completed', models.BooleanField(blank=True, default=False, help_text='Yes, I attest that I have completed the\n                                                        training for this system and will abide by\n                                                        the code of conduct.')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneVerifyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('tries_counter', models.IntegerField(default=0, editable=False)),
                ('code', models.CharField(blank=True, editable=False, max_length=4)),
                ('valid', models.BooleanField(default=True)),
                ('expires', models.DateTimeField(blank=True)),
                ('added', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MFACode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('tries_counter', models.IntegerField(default=0, editable=False)),
                ('code', models.CharField(blank=True, editable=False, max_length=4)),
                ('mode', models.CharField(choices=[('', 'None'), ('EMAIL', 'Email'), ('FIDO', 'FIDO U2F'), ('SMS', 'Text Message (SMS)')], default='', max_length=5)),
                ('valid', models.BooleanField(default=True)),
                ('expires', models.DateTimeField(blank=True)),
                ('added', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IndividualIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('PATIENT_ID_FHIR', 'Patient ID in FHIR'), ('MPI', 'Master Patient Index (Not FHIR Patient ID)'), ('SSN', 'Social Security Number'), ('MEDICAID_ID', 'Medicaid ID Number'), ('MEDICARE_HICN', 'Medicare HICN (Legacy)'), ('MEDICARE_ID', 'Medicare ID Number'), ('INSURANCE_ID', 'Insurance ID Number'), ('IHE_ID', 'Health Information Exchange ID'), ('NPI', 'National Provider Identifier'), ('UHI', 'Universal Health Identifier')], db_index=True, default='', max_length=255)),
                ('name', models.SlugField(blank=True, default='', max_length=255)),
                ('country', models.CharField(blank=True, db_index=True, default='US', help_text='e.g., a two letter country code in ISO 3166 format.', max_length=2)),
                ('subdivision', models.CharField(blank=True, default='', help_text="e.g., a country's subdivision such as a state or province.", max_length=2, verbose_name='State')),
                ('value', models.CharField(blank=True, db_index=True, default='', max_length=250)),
                ('uri', models.TextField(blank=True, db_index=True, default='')),
                ('metadata', models.TextField(blank=True, default='', help_text='JSON Object')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivationKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(default=uuid.uuid4, max_length=40)),
                ('expires', models.DateTimeField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonToPersonRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('grantee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='persontoperson_grantee', to=settings.AUTH_USER_MODEL)),
                ('grantor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='persontoperson_grantor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('grantor', 'grantee')},
            },
        ),
        migrations.CreateModel(
            name='OrganizationAffiliationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_approve_affiliation', 'Can approve affiliation'),),
                'unique_together': {('user', 'organization')},
            },
        ),
    ]
